/proc/random_blood_type()
/proc/random_eye_color()
/proc/random_underwear(gender)
/proc/random_undershirt(gender)
/proc/random_socks()
/proc/random_backpack()
/proc/random_features()
/proc/random_hairstyle(gender)
/proc/random_facial_hairstyle(gender)
/proc/random_unique_name(gender, attempts_to_find_unique_name=10)
/proc/random_unique_lizard_name(gender, attempts_to_find_unique_name=10)
/proc/random_unique_plasmaman_name(attempts_to_find_unique_name=10)
/proc/random_unique_ethereal_name(attempts_to_find_unique_name=10)
/proc/random_unique_moth_name(attempts_to_find_unique_name=10)
/proc/random_skin_tone()
/proc/age2agedescription(age)
/proc/do_mob(mob/user, mob/target, time = 3 SECONDS, timed_action_flags = NONE, progress = TRUE, datum/callback/extra_checks, interaction_key, max_interact_count = 1)
/mob/proc/break_do_after_checks(list/checked_health, check_clicks)
/mob/living/break_do_after_checks(list/checked_health, check_clicks)
/proc/do_after(mob/user, delay, atom/target, timed_action_flags = NONE, progress = TRUE, datum/callback/extra_checks, interaction_key, max_interact_count = 1)
/proc/do_after_mob(mob/user, list/targets, time = 3 SECONDS, timed_action_flags = NONE, progress = TRUE, datum/callback/extra_checks, interaction_key, max_interact_count = 1)
/proc/is_species(A, species_datum)
/proc/ishumanbasic(target)
/proc/spawn_atom_to_turf(spawn_type, target, amount, admin_spawn=FALSE, list/extra_args)
/proc/spawn_and_random_walk(spawn_type, target, amount, walk_chance=100, max_walk=3, always_max_walk=FALSE, admin_spawn=FALSE)
/proc/deadchat_broadcast(message, source=null, mob/follow_target=null, turf/turf_target=null, speaker_key=null, message_type=DEADCHAT_REGULAR, admin_only=FALSE)
/proc/create_random_mob(spawn_location, mob_class = HOSTILE_SPAWN)
/proc/passtable_on(target, source)
/proc/passtable_off(target, source)
/proc/dance_rotate(atom/movable/AM, datum/callback/callperrotate, set_original_dir=FALSE)
/proc/active_free_borgs()
/proc/active_ais(check_mind=FALSE, z = null)
/proc/select_active_ai_with_fewest_borgs(z)
/proc/select_active_free_borg(mob/user)
/proc/select_active_ai(mob/user, z = null)
/proc/get_temp_change_amount(temp_diff, change_rate = 0.06)
/proc/sort_mobs()
/proc/get_mob_by_ckey(key)
/proc/parse_zone(zone)
/proc/check_target_facings(mob/living/initiator, mob/living/target)
/proc/get_mob_or_brainmob(occupant)
/mob/proc/apply_pref_name(preference_type, client/requesting_client)
/proc/living_player_count()
/proc/dview(range = world.view, center, invis_flags = 0)
/mob/dview
	name = "INTERNAL DVIEW MOB"
/mob/dview/Initialize(mapload) //Properly prevents this mob from gaining huds or joining any global lists
/mob/dview/Destroy(force = FALSE)
/world/proc/push_usr(mob/user_mob, datum/callback/invoked_callback, ...)
